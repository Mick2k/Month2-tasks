#!/bin/bash


## Task A - Find which files contain entries which have IP addresses in.

##Pattern matches the lines which have IP addresses in all the files within the directory, then used basename to show just the file names removing the path
grep -l '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' /home/centos/bash/tasks-month2/exercise2/httpd/access_log-20180930 | xargs -L 1 basename

#__________________________________________________________________________________________________________________________________________________________

## Task B - From one of those files list the lines which have IP addresses in.

##Pattern matches the lines within the specified file and displays those lines

grep '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' /home/centos/bash/tasks-month2/exercise2/httpd/access_log-20180930

#__________________________________________________________________________________________________________________________________________________________

## Task C - Extract the IP addresses from those files and sort them by the fourth octet.

## "grep -o" - Prints only the matched parts of a matching line, with each output on a separate output line.

## sort; "-u" - sorts this uniquely removing and duplicates ; "-n" sorts numerically based off of the following 2 factors; "-t." field separator of "." and ; "-k4" key of 4 / 4th portion

grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' /home/centos/bash/tasks-month2/exercise2/httpd/access_log-20180930 | sort -u -n -t. -k4

#__________________________________________________________________________________________________________________________________________________________

## Task D - Using of the log files with IP addresses in, create a copy *just* using filters (no cp, mv or editors) which is identical but where the IP addresses have been replaced with 'W.X.Y.Z' (I've used access_log-20181111)

## I was unable to find out how to copy the file using the filter, I tried sed -i however this appends/edits the existing file and allows you to make a copy with a suffix, I have tried looking for another way but cannot find one so I have used "input file" > "output file" 

## sed has been used below to pattern match the IP address field and subsitute it with W.X.Y.Z

sed "s=[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}=W\.X\.Y\.Z=g" /home/centos/bash/tasks-month2/exercise2/httpd/access_log-20180930 > /home/centos/bash/tasks-month2/exercise2/httpd/access_log-20180930_task_D

#_________________________________________________________________________________________________________________________________________________________

## Task E - Replace any double quotes " with single quotes ' and single / with _ (but not //)

## The new sed commands here replace every double quotation with single quotation marks instead, followed by changing every instance of "/" to "_".  To achieve the last part of leaving "//" in place I have simply replaced any instance of double underscores "__" with double forward slashes "//".  If this was a problem with other portions of the data I could also subsitute the "//" to something unique first, then change the single "/"'s, then come back and change my unique name back to double "//".  I couldn't find a command to exclude them from my first sed operations.

# First line of code it the code from the previous task
sed "s=[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}=W\.X\.Y\.Z=g;
s=\"=\'=g;s/\//_/g;s/__/\/\//g" /home/centos/bash/tasks-month2/exercise2/httpd/access_log-20180930 > /home/centos/bash/tasks-month2/exercise2/httpd/access_log-20180930_task_D-E

#_________________________________________________________________________________________________________________________________________________________

## Task F - Replace anything in () and before a ; with '<redacted>'

## For this, I had to use square brackets "[]" , "^" (upto) and "*" (any number of characters) in order to sort out replacing anything upto the first ) and then the ) with "<redacted>".  The 2nd portion replaces any character (.), any number of characters (*) before and including ";" and replaces it with "<redacted>;.

# First line of code it the code from the previous task
sed "s=[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}=W\.X\.Y\.Z=g;s=\"=\'=g;s/\//_/g;s/__/\/\//g;
s/[(][^)]*[)]/<redacted>/g;s/.*;/<redacted>;/g" /home/centos/bash/tasks-month2/exercise2/httpd/access_log-20180930 >  /home/centos/bash/tasks-month2/exercise2/httpd/access_log-20180930_task_D-F
